; This sourcecode published under the Terms of the General Public License.
; Written by Eric Esser, Wissenschaftszentrum Berlin, eric.esser@wzb.eu.
; Inspired by uib gmbh (www.uib.de), Thomas Besser (KIT), Detlef Krummel (GEI) and Tobias Friede (Fraunhofer)

DefVar $ResultNumber$

Set $SearchPattern$ = $ProductName$
; Parameter: $SearchPattern$ Suchbegriff in Registry
Sub_search_registry32_uninstall_keys
; R체ckgabewert: $ResultList$ gefundene Eintr채ge

Set $ResultNumber$ = count ($ResultList$)
if ($ResultNumber$ = "0")
  comment "No installations of " + $SearchPattern$ + " found in $RegPathUninstall$. Nothing to do"
else
  for %SingleResult% in $ResultList$ do sub_uninstall
endif                   

[sub_uninstall]
comment "Found installation in registry"
Message "Uninstalling " + $ProductName$

; welcher Installer wurde verwendet? MSI oder Inno? UninstallString verr채t es.
Set $UninstallProgram$ = GetRegistryStringValue32("[" + $RegPathUninstall$ + "\%SingleResult%] UninstallString")

; Achtung 'contains' ist case-sensitive! msiexec != MsiExec
if (contains($UninstallProgram$, "MsiExec.exe"))
	Winbatch_uninstall_msi
	Sub_check_exitcode
	Set $UninstallDir$ = $InstallDir$
endif
if (contains($UninstallProgram$, "unins000.exe"))
	; doppelte Anf체hrungszeichen entfernen
	Set $UninstallProgram$ = takeString (1, splitString ( $UninstallProgram$ , '"')) 
	Winbatch_uninstall_inno 
	Sub_check_exitcode
	Set $UninstallDir$ = ExtractFilePath($UninstallProgram$)
endif


[Winbatch_uninstall_inno]
"$UninstallProgram$" /verysilent /norestart /SUPPRESSMSGBOXES /nocancel

[Winbatch_uninstall_msi]
;msiexec /x $RegId$ /qb! REBOOT=ReallySuppress
$UninstallProgram$ /qb! REBOOT=ReallySuppress